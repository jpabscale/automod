2.4.1: Fixed .uasset JSON redundant patching. Added JSON API (serialization/deserialization, etc.) to property value patchlets  useful for manipulating embedded JSON data inside string values (e.g.,  StartSelfEffect in SkillActiveStepTable). AIO and effect-table: fixed _MK2 gear effectiveness (fixed from quadruple to double).

2.4.0: Added support for JSONPath in TOML patch files to enable flexible  patching of general UAssetAPI JSON struct objects (see the updated  TOML patch file schema description). Added .search to test JSONPath expressions on .uassets. Added .demo.aio.hard and .demo.aio.base.hard mods that incorporate 1156 6x hard-er mode, but done using JSONPath  (see patches\.all-in-one-patches\*987*\.hard\DifficultyStatGroupTable.toml). Demo mods: no changes beside the new hard-er ones.

2.3.1: Added .demo.effect to create the effect-table demo mod consisting only the  AIO EffectTable changes (see patches\.all-in-one-patches\*987*\EffectTable.toml). Even better .toml and .toml.all that work well with regex/patchlets and always print the game original property values as comments in the  generated TOML patch files (as a consequence, .toml now requires the game directory as well). Better error messages when patchlets fail to evaluate. Added some (ever so slightly) more helpful messages when retoc and UAssetGUI fail. AIO: added more EffectTable changes.

2.3.0: Added support to use Java regular expression syntax in TOML patch files for matching object names. Added support to use "patchlet" -- any general Scala code expression/block to match object names,  as well as for updating property values (with API to access the original game property value, or any original property value in the same .uasset.)  Added the --dry-run option to test patches without generating a mod. AIO: updated to use 1329 v1.1.

2.2.3: Cached tool downloads in Windows Temp dir to reduce bandwidth. Added the --no-code-patching mod generation CLI option to skip code patching without modifying any script code. Reorganized folders to tidy up top-level folder. Introduced a dedicated patchCustom.sc file for users to customize the script to ease upgrading automod with existing custom code patches. Added UAssetApi.sc to ease creation of UAssetApi JSON objects. Added TOML inline tables and arrays as TOML patch values (for custom scripting code, for now). Added .extra patches (not included in demo mods). AIO: changed moveset/skills to use patches for 1329. Added .demo.aio.base to create AIO demo mod for the base gameplay (and NG+).

2.2.2: Added AES game key config. Made more robust in handling some exceptional cases. Refactored script code for readability. Added .demo and .demo.aio to conveniently reproduce demo mods. AIO: replaced Tempest with fusion chain-stab and Overdrive with fusion sword aura; adjusted burst damages.

2.2.1: More VSCode fixes. Added automod.bat auto-generation during the first launch. Included all-in-one-patches and all-in-one-code-patches-unified in the main distribution, but disabled by default using names with a leading dot (.).

2.2.0: Cached .uasset JSON to speed up subsequent runs if all of the files in the Paks directory have not been modified (based on each file's last modified time and retoc/UAssetGUI versions). Improved VSCode .config.json handling. Refactored sbmod.sc into separate files.

2.1.1: Made the patch loader to ignore files/folders whose name starts with a dot (.) in the patches directory. Prioritized to use a JSON configuration file for some game and tool information (e.g., usmap URL, UE and modding tool versions, etc.) that can be edited directly/via VSCode settings.

2.1.0: Added .diff.into command and .code support for .toml. Better patch form check and other improvements.

2.0.1: Fixed a critical bug in VSCode extension.

2.0.0: Added VSCode extension. [sigh, very broken; archived]

1.9: Fixed .toml.all and usage checks.

1.8: Added more jd patch form processing. Better TOML output. Added .toml.all command.

1.7: Better usage & patch form checks and some fixes.

1.6: Added .toml and .diff command with some bug fixes.

1.5: Added dynamic patch file loading. Fixed a breaking bug in v1.3 and v1.4.

1.4: Added script code generation from a jd patch file. [Broken; don't use].

1.3: Added FModel and jd setup, printing diff patch messages, and another uasset example to illustrate multiple uasset editing in a single mod. [Broken; don't use].

1.2: Added customization hint comments and another property update example, as well as some clean up and simplification refactoring.

1.1: Updated .usmap URL and other minor tweaks.

1.0: Initial version.