import com.fasterxml.jackson.databind.JsonNode
import scala.collection.immutable.{TreeMap, TreeSet}

lazy val uassetNames: TreeSet[String] = TreeSet(
  // insert the uasset name that you want to handle in the patch method here (without file extension)
  // "AchievementTable",
  // "AcquisitionSkillTable",
  // "ActivityTable",
  // "ActorPlayPresetTable",
  // "ActorStatTextTable",
  // "AIGroupTable",
  // "AlbumTable",
  // "AreaControlVolumeTable",
  // "ArtBookTable",
  // "BossChallengeTable",
  // "CanTable",
  // "CharacterAnimMoveInfoTable",
  // "CharacterAnimSetTable",
  // "CharacterAppearanceTable",
  // "CharacterDeadTable",
  // "CharacterDetectAITable",
  // "CharacterLevelTable",
  // "CharacterMoveTable",
  // "CharacterStanceTable",
  // "CharacterTable",
  // "CharacterTribeTable",
  // "CharacterWeightTable",
  // "CheatCommandTable",
  // "CheatProgressQuestCommandsTable",
  // "CheatQuestTable",
  // "ConditionGroupTable",
  // "ConditionTable",
  // "ConditionTriggerTable",
  // "CreditTable",
  // "DifficultyStatGroupTable",
  // "DropRateAdjustTable",
  // "EditorTooltipTable",
  // "EffectCombinationTable",
  // "EffectTable",
  // "EffectVolumePropertyTable",
  // "EffectVolumeTable",
  // "EquipmentMaterialTable",
  // "EquipmentTable",
  // "EquipStatViewerTable",
  // "EventActorActiveTable",
  // "EventActorBattleStateTable",
  // "EventActorEffectTable",
  // "EventAIDecoratorTable",
  // "EventAreaControlVolumeControlTable",
  // "EventEffectVolumeControlTable",
  // "EventEnvControlTable",
  // "EventGiftTable",
  // "EventGuideActionTable",
  // "EventInteractCampTable",
  // "EventItemActionTable",
  // "EventItemTable",
  // "EventLaserControlTable",
  // "EventLevelSeqTable",
  // "EventMetaAITable",
  // "EventNewGamePlusSpawnTable",
  // "EventObjectControlTable",
  // "EventQuestTable",
  // "EventRequestPathWayTable",
  // "EventSpawnTable",
  // "EventTheaterTable",
  // "EventUIActionTable",
  // "EventZoneControlTable",
  // "EventZoneEventActorControlTable",
  // "EventZoneWarpTable",
  // "GamePlayProgressCheatTable",
  // "GamePlayProgressRecordTable",
  // "GearStatGroupTable",
  // "GearStatTable",
  // "GuideActionTable",
  // "GuideMessageTable",
  // "HintTable",
  // "IsolatedAreaTable",
  // "ItemBulletTable",
  // "ItemConsumableTable",
  // "ItemEquipableTable",
  // "ItemFishTable",
  // "ItemLureTable",
  // "ItemReplacementTable",
  // "ItemSkillEquipableTable",
  // "ItemSpawnTable",
  // "ItemTable",
  // "KeyMappingRolloverTable",
  // "KeyMappingTable",
  // "LevelGraphicsOptions",
  // "LevelTargetFilter",
  // "LoadingScreenGameTipTable",
  // "MailBoxGiftTable",
  // "ManualTable",
  // "MetaAIBehaviorTable",
  // "MetaAITable",
  // "MultiMapTable",
  // "MultiPlayRuleTable",
  // "NewGamePlusAlreadySetupTable",
  // "NikkeLostArticleTable",
  // "NikkeStageTable",
  // "PassiveSkillFunctionTable",
  // "PhotoChallengeTable",
  // "PhotoModeEyesPositionByPoseTable",
  // "PhotoModeFacialAnimationTable",
  // "PhotoModeImageFilterTable",
  // "PhotoModeImageTable",
  // "PhotoModeMovementTable",
  // "PhotoModeOptionTable",
  // "ProjectileTable",
  // "PuzzleStringArrayTable",
  // "QuestMissionTable",
  // "QuestTable",
  // "QuestTaskGroupTable",
  // "QuestTaskTable",
  // "ResourceCacheSequenceTable",
  // "RestartRuleTable",
  // "RewardGroupTable",
  // "SequenceActorTagTable",
  // "ShopItemTable",
  // "ShopTable",
  // "ShowParamTable",
  // "SkillActiveStepTable",
  // "SkillCommandTable",
  // "SkillPriorityTable",
  // "SkillResultTable",
  // "SkillTable",
  // "SocialAnimTable",
  // "SoundAttenuationEventTable",
  // "SoundEquipmentSetTable",
  // "SoundEventLevelSequenceTable",
  // "SoundEventQuestTable",
  // "SoundEventTable",
  // "SpawnGroupRuleTable",
  // "SPLevelTable",
  // "StudioTransitionTable",
  // "TargetFilterTable",
  // "TheaterSelectDataTable",
  // "TrainingRoomSettingTable",
  // "TransformCharacterTable",
  // "TrophyTable",
  // "TurntableSoundTable",
  // "UIActionRequestTable",
  // "UIKeyImageAssetTable",
  // "UITextActionFormatTable",
  // "UITextInputDefineTable",
  // "UITutorialTable",
  // "WorldMapTable",
  // "WorldTable",
  // "WorldTransitionTable",
  // "ZoneCampTable",
  // "ZoneEnvSpawnTable",
  // "ZoneEnvTable",
  // "ZoneEventActorTable",
  // "ZoneEventTable",
  // "ZoneLayerTable",
  // "ZonePhaseEventTable",
  // "ZoneTable",
  // "ZoneTriggerTable"
) 

// This method will be called for any uasset in the uassetNames, as well as for uasset not handled by the script code
// The passed ast's JSON schema is UAssetAPI's; see the .cache directory to understand UAssetAPI JSON schema 
def patch(uassetName: String, ast: JsonNode, patchTrees: Seq[automod.UAssetPropertyChanges]): Boolean = {

  // insert your custom patching code here

  return false // return true if you can modify the ast successfully
}