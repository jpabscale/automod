# ...                                                        # Game Original Value
[P_Eve_Sword_Burst_MeleeCombatBuff1_1_Cast1]
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "BlockAction_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''                                                         # "[{\"Alias\":\"UseSkill_Step\"}, {\"Alias\":\"BlockAction_Step\"}, {\"Alias\":\"AddHitDefense_BNSkill\", \"CalculationValue\":2, \"Time\":0.7}, {\"Alias\":\"Check_LinkIgnore_Step\"}]"

['.*: ^P_Eve_Sword_Normal_(Light|StrongAttack(7|10)|Finish|DashAttackCombo).*Ex_Finish1$']
NextStepAlias = '''=> v.objName match {
  case "P_Eve_Sword_Normal_FinishAttack4_1_Ex_Finish1" => "P_Eve_Sword_Normal_FinishAttack3_1_Ex_Cast1"
  case "P_Eve_Sword_Normal_FinishAttack3_1_Ex_Finish1" => "P_Eve_Sword_Air_RollingAttack1_1_Ex_Cast1"

  case "P_Eve_Sword_Normal_LightAttack4_1_Ex_Finish1" => "P_Eve_Sword_Normal_StrongAttack10_1_Ex_Cast1"
  case "P_Eve_Sword_Normal_StrongAttack10_1_Ex_Finish1" => "P_Eve_Sword_Normal_StrongAttack6_1_Ex_Cast1"
  
  case "P_Eve_Sword_Normal_DashAttackCombo1_1_Ex_Finish1" => "P_Eve_Sword_Normal_StrongAttack7_1_Ex_Cast1"
  case "P_Eve_Sword_Normal_StrongAttack7_1_Ex_Finish1" => "P_Eve_Sword_Normal_StrongAttack8_1_Ex_Cast1"

  case _ => null
}'''                                                        # null

['.*: ^P_Eve_Sword_(Normal_(Light|Strong|Finish|DashAttackCombo)|Air_RollingAttack).*Ex_Finish1$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "AddHitDefense_EveSkillDispel" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''
Duration = 0.1
OverrideTargetFilterAlias = "P_Eve_Sword_0500_360_500_HitArea"

['.*: ^P_Eve_Sword_(Normal_(Light|Strong|Finish|DashAttackCombo)|Air_RollingAttack).*Ex_Cast1$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "NoDamage_Skill" | "BlockAction_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^P_Eve_Sword_Burst_MassiveAttack[1-2]_1_Cast1$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "NoDamage_Skill" | "BlockAction_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^P_Eve_Sword_Burst_MassiveAttack[1-2]_1_Cast2$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "NoDamage_Skill" | "BlockAction_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^P_Eve_Sword_Burst_MassiveAttack[1-2]_1_Finish1$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "NoReactionSlug_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "NoDamage_Skill" | "NoReactionSlug_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''
Duration = 0.1

[P_Eve_Sword_Burst_MeleeCombatBuff1_1_Finish1]
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "NoReactionSlug_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''                                                         # "[{\"Alias\":\"UseSkill_Step\", \"Time\":0.3}, {\"Alias\":\"BlockMove_Step\", \"Time\":0.3}, {\"Alias\":\"BlockSkill_Step\", \"Time\":0.3}, {\"Alias\":\"P_Eve_MeleeCombatBuff_FX\", \"Time\":10}, {\"Alias\":\"P_Eve_MeleeCombatBuff_PhysicAttackPower\"}, {\"Alias\":\"P_Eve_MeleeCombatBuff_AttackSpeed\"}]"
OverrideTargetFilterAlias = "P_Eve_Sword_Burst_MassiveAttack1_1_HitArea"    # "P_Eve_Sword_Burst_MassiveAttack1_1_HitArea"
Duration = 0.1                                               # 1.3
