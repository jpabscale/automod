['.*: ^P_Eve_Sword_(Normal_(Light|Strong|Finish|DashAttackCombo)|Air_RollingAttack).*Ex_Hit.*$']
HitLevelResultTargetCommonEffect = '''=> {
  val maxStunTime = 3d
  val mult = 3d
  var hitStunTime = 1d
  val newArray = JsonNodeFactory.instance.arrayNode
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "HitStun" => hitStunTime = array.get(i).get("Time").asDouble
    case _ => newArray.add(array.get(i))
  }
  hitStunTime = if (hitStunTime > maxStunTime) hitStunTime 
                else if (hitStunTime * mult > maxStunTime) maxStunTime
                else hitStunTime * mult
  newArray.add(toJsonNode(s"""{ "Alias": "HitStun", "Time": $hitStunTime }"""))
  newArray.toString
}'''

[P_Eve_Sword_Burst_MeleeCombatBuff1_1_Hit1]
HitLevelResultTargetCommonEffect = '''=> {
  val maxStunTime = 3d
  val mult = 3d
  var hitStunTime = 1d
  val newArray = JsonNodeFactory.instance.arrayNode
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "HitStun" => hitStunTime = array.get(i).get("Time").asDouble
    case _ => newArray.add(array.get(i))
  }
  hitStunTime = if (hitStunTime > maxStunTime) hitStunTime 
                else if (hitStunTime * mult > maxStunTime) maxStunTime
                else hitStunTime * mult
  newArray.add(toJsonNode(s"""{ "Alias": "HitStun", "Time": $hitStunTime }"""))
  newArray.toString
}'''

[P_Eve_Tachy_Skill_ScrewAttack1_1_Hit3]
ResultTargetCommonEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode(s"""{ "Alias": "Stun" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "Stun" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^P_Eve_(Sword_Normal_DashAttack|Tachy_JustEvade_StrongAttackCombo).*Hit.*$']
HitLevelResultTargetCommonMoveAlias = "null"
ResultTargetCommonShowPath = "Hit/Result_Hit_Stand_Sword_Tachy_Attack"
ResultTargetDownShowPath = "Hit/Result_Hit_Stand_Sword_Tachy_Attack_NoAnim"
ResultTargetGroggyShowPath = "Hit/Result_Hit_Stand_Sword_Tachy_Attack_NoAnim"
ResultTargetAirShowPath = "Hit/Result_Hit_Stand_Sword_Tachy_Attack_NoAnim"
ResultTargetSwimmingShowPath = "Hit/Result_Hit_Stand_Sword_Tachy_Attack_NoAnim"
ResultTargetCriticalShowPath = "Hit/Result_Hit_Stand_Sword_Critical"

['.*: ^P_Eve_(Sword_Beta_SwordAura|Tachy_Skill_SwordAura).*Projectile.*Hit.*$']
HitLevelResultTargetDownMoveAlias = "Hit_Back_020_150"
ResultTargetDownShowPath = "Hit/Result_Hit_Projectile_LightAttack"
ResultTargetAirborneShowPath = "Hit/Result_Hit_Airborne"
ResultTargetAirborneEffect =  '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode(s"""{ "Alias": "P_Eve_SkillTree_SwordAura_KnockDown", "startDelayTime": 0.05 }"""))
  val value = v.currentOpt[String].orNull
  if (value != null) {
    val array = toJsonNodeT[ArrayNode](value)
    for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
      case "P_Eve_SkillTree_SwordAura_KnockDown" =>
      case _ => newArray.add(array.get(i))
    }
  }
  newArray.toString
}'''
