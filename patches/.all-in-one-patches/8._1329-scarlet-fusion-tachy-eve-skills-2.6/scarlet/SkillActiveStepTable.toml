# ...                                                        # Game Original Value
[M_Scarlet_PhaseChange1_EndShieldOwn_Cast1]
StartTargetEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "DelayDeath_Skill" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''                                                         # "[{\"Alias\":\"Check_LinkSkill\"}, {\"Alias\":\"SkillCancel\"}, {\"Alias\":\"BlockAction_Skill\", \"Time\":5.7}, {\"Alias\":\"BlockRotation_Skill\", \"Time\":5.7}, {\"Alias\":\"DelayDeath_Skill\",\"Time\":5.7}, {\"Alias\":\"LinkState_PC\", \"Time\":6.9}, {\"Alias\":\"Check_NotDamageScreenFX\"}, {\"Alias\":\"Check_NotCameraShake\"}]"

[M_Scarlet_PhaseChange1_EndShieldOwn_Hit1]
StartTargetEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "ImmediateDeathPossibleRevival" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''                                                         # "[{\"Alias\":\"SkillDamage_Melee\"}, {\"Alias\":\"HitImpactStrongLink\"}, {\"Alias\":\"BlockAction_Step\"}, {\"Alias\":\"BlockRotation_Step\"}, {\"Alias\":\"ImmediateDeathPossibleRevival\"}]""

[M_Scarlet_PhaseChange1_EndShieldOwn_Finish1]
StartTargetEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "P_Eve_SkillTree_SwordAura_KnockDown", "startDelayTime": 0.05 }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "P_Eve_SkillTree_SwordAura_KnockDown" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''                                                         # "[{\"Alias\":\"M_Scarlet_EnterZoneEnd\"}, {\"Alias\":\"BlockAction_Step\", \"Time\":2.1}, {\"Alias\":\"BlockRotation_Step\", \"Time\":2.1}, {\"Alias\":\"DownFaceDown\",\"startDelayTime\":1.9}, {\"Alias\":\"ForceLockOn\",\"startDelayTime\":1.2}, {\"Alias\":\"Dispel_NotDamageScreenFX\"}, {\"Alias\":\"Dispel_NotCameraShake\"}]"

[P_Eve_Sword_Burst_MeleeCombatBuff1_1_Finish1]
NextStepAlias = "M_Scarlet_PhaseChange1_EndShieldOwn_Cast1"  # null
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "BlockAction_Step" | "BlockMove_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^P_Eve_Sword_(Normal_StrongAttack(6|8)|Air_RollingAttack).*Ex_Finish1$']
NextStepAlias = '''=> v.objName match {
  case "P_Eve_Sword_Air_RollingAttack1_1_Ex_Finish1" => "M_Scarlet_MoveBackShot2_Cast1"
  case "P_Eve_Sword_Normal_StrongAttack6_1_Ex_Finish1" => "M_Scarlet_AirDashSpaceCut_Cast1"
  case "P_Eve_Sword_Normal_StrongAttack8_1_Ex_Finish1" => "M_Scarlet_BackDashSpaceCut_Cast1"
  case _ => null
}'''                                                         # null
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "BlockAction_Step" | "BlockMove_Step" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^M_Scarlet_(BlinkCut|BlinkCombo|BlinkShot|PhaseChange1_EndShieldOwn|MoveBackShot2|BackDashSpaceCut|AirDashSpaceCut|SwingTriple|Swing_|KickStamp|JumpStampSlash).*(Cast|Hit).*$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | "BlockAction_Step" | "BlockMove_Step" |
         "M_Scarlet_PlayTheater01" | "M_Scarlet_PlayTheater02" | "M_Scarlet_PlayTheater03" | "M_Scarlet_Phase2" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''

['.*: ^M_Scarlet_(BlinkCut|BlinkCombo|BlinkShot|PhaseChange1_EndShieldOwn|MoveBackShot2|BackDashSpaceCut|AirDashSpaceCut|SwingTriple|Swing_|KickStamp|JumpStampSlash).*Finish.*$']
StartSelfEffect = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  newArray.add(toJsonNode("""{ "Alias": "NoDamage_Skill", "Time": 2 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_Skill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "AddHitDefense_EveSkill", "CalculationValue": 4 }"""))
  newArray.add(toJsonNode("""{ "Alias": "BlockMove_Step" }"""))
  newArray.add(toJsonNode("""{ "Alias": "NoReactionSlug_Step" }"""))
  val value = v.currentOpt[String].get
  val array = toJsonNodeT[ArrayNode](value)
  for (i <- 0 until array.size) array.get(i).get("Alias").asText match {
    case "AddHitDefense_Skill" | "AddHitDefense_EveSkill" | "NoDamage_Skill" | 
         "BlockAction_Step" | "BlockMove_Step" | "NoReactionSlug_Step" | 
         "M_Scarlet_PlayTheater01" | "M_Scarlet_PlayTheater02" | "M_Scarlet_PlayTheater03" | 
         "M_Scarlet_NoGuardCheck" | "M_Scarlet_NoShieldDamage" | "NoJustParryStaminaDamage_Dispel" |
         "MinimumHP_Dispel" | "M_Scarlet_HPRecover" | "M_Scarlet_ShieldZero" | "M_Scarlet_StaminaUp" |
         "M_Scarlet_StaminaRecover" | "M_Scarlet_PhaseChangeSkillCoolTimeResetGroup" =>
    case _ => newArray.add(array.get(i))
  }
  newArray.toString
}'''
Duration = '''=> {
  val orig = v.orig[Double]
  v.objName match {
    case "M_Scarlet_KickStamp_Finish1" => orig
    case "M_Scarlet_JumpStampSlash_Finish1" | "M_Scarlet_AirDashSpaceCut_Finish1" => 0.4
    case "M_Scarlet_BlinkCut_Finish1" | "M_Scarlet_BlinkCombo_Finish1" | "M_Scarlet_PhaseChange1_EndShieldOwn_Finish1" => 0.1
    case "M_Scarlet_JumpStampSlash_Finish1" => 0.4
    case _ => if (orig > 2) 2 else orig
  }
}'''

['.*: ^M_Scarlet_(BlinkCombo|KickStamp)_Hit.?$']
AttackCollisionGroupArray = '''=> {
  val newArray = JsonNodeFactory.instance.arrayNode
  val value = v.currentOpt[String].orNull
  if (value != null) {
    val array = toJsonNodeT[ArrayNode](value)
    for (i <- 0 until array.size) array.get(i).get("CollisionGroupName").asText match {
      case "Collision_KickL" => newArray.add(toJsonNode("""{"CollisionGroupName":"Collision_LeftFoot", "DelayTime":0}"""))
      case "Collision_KickR" => newArray.add(toJsonNode("""{"CollisionGroupName":"Collision_RightFootWide", "DelayTime":0}"""))
      case _ => newArray.add(array.get(i))
    }
    newArray.toString
  } else null
}'''

[M_Scarlet_Swing_Finish1]
NextStepAlias = "M_Scarlet_KickStamp_Cast1"
OverrideTargetFilterAlias = "M_Scarlet_HitArea"

['.*: ^P_Eve_(Fusion|Tachy)_Skill_ParrySlash1_1_Finish2$']
NextStepAlias = "M_Scarlet_PhaseChange1_EndShieldOwn_Cast1"
OverrideTargetFilterAlias = "P_Eve_Sword_Burst_MassiveAttack1_1_HitArea"
